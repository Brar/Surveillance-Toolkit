---
lang: en
title: "NeoIPC Surveillance Partner Certificate"
author-meta: "NeoIPC Surveillance team"
subject: "Partner certificate for the NeoIPC Surveillance network."
keywords: "NeoIPC, Surveillance, Certificate"
date-meta: now
params:
  startYear: NULL
  endYear: NULL
  nPatients: NULL
  hospitalName: NULL
  signatory: NULL
  signatureImagePath: NULL
  dataFilePath: NULL
  departmentCode: NULL
  token: NULL
engine: knitr
format:
  pdf:
    template-partials:
      - before-body.tex
    documentclass: scrartcl
    mainfont: "Noto Sans"
    fontsize: 12pt
    papersize: a4paper
    geometry:
      - top=15mm
      - bottom=20mm
      - left=25mm
      - right=25mm
      - heightrounded
    keep-md: true
    keep-tex: true
    include-in-header: 
      text: |
        \usepackage{microtype}
        \usepackage[absolute]{textpos}
        \pagenumbering{gobble}
---
```{r}
#| label: Setup

# Initialize our report data from the data file if one is provided
if (!is.null(params$dataFilePath) && file.exists(params$dataFilePath)) {
  data <- jsonlite::fromJSON(params$dataFilePath)
} else {
  data <- list()
}

# Add report data values from parameters potentially overriding values from the
# data file
if (!is.null(params$startYear)) data$startYear <- params$startYear
if (!is.null(params$endYear)) data$endYear <- params$endYear
if (!is.null(params$hospitalName)) data$hospitalName <- params$hospitalName
if (!is.null(params$nPatients)) data$nPatients <- params$nPatients
if (!is.null(params$signatureImagePath)) data$signatureImagePath <- params$signatureImagePath
if (!is.null(params$signatory)) data$signatory <- params$signatory
if (!is.null(params$departmentCode)) data$departmentCode <- params$departmentCode

# Abort if we don't have a signatory
if (is.null(data$signatory)) stop("You have to provide a signatory")

# Abort if we don't have a valid signature image path
if (is.null(data$signatureImagePath)) stop("You have to provide a signatureImagePath")
if (!file.exists(data$signatureImagePath)) stop(paste0("'", data$signatureImagePath,"' is not a valid file path."))

# if we are missing any essential information we try fetch it directly from the
# NeoIPC Surveillance Platform
if (is.null(data$startYear) || is.null(data$endYear) || is.null(data$hospitalName) || is.null(data$nPatients)) {
  if(is.null(data$departmentCode)) stop("There was insufficient data to generate a partner certificate.\nIf you don't have all the information please provide a department code so that the system can acquire the information from the NeoIPC Surveillance Platform.")

  # Initialize our query dates to startYear and/or endYear or NULL
  if (is.null(data$startYear))
    startFrom <- NULL
  else
    startFrom <- as.Date(paste0(data$startYear,'-01-01'))
  if (is.null(data$endYear))
    endTo <- NULL
  else
    endTo <- as.Date(paste0(data$endYear,'-12-31'))

  if (is.null(params$token)){
    connection_options <- neoipcr::dhis2_connection_options(token = Sys.getenv("NEOIPC_DHIS2_TOKEN"))
  } else {
    connection_options <- neoipcr::dhis2_connection_options(token = params$token)
  }

  # Import date from our DHIS2 server
  ds <- suppressWarnings(neoipcr::import_dhis2(
    connection_options = connection_options,
    dataset_options = neoipcr::dhis2_dataset_options(
      surveillance_end_from = startFrom,
      surveillance_end_to = endTo,
      include_hospital = "yes",
      include_department = "yes"
      )))

  department <- ds$metadata$departments |>
    dplyr::filter(code == data$departmentCode) |>
    dplyr::select(department_key, hospital_key)

  if (nrow(department) < 1)
    stop(paste0("Could not find a department with the code '", data$departmentCode, "'."))

  if (is.null(data$nPatients))
    data$nPatients <- ds$enrollments |>
    dplyr::semi_join(department, dplyr::join_by(department_key)) |>
    dplyr::pull(patient_key) |>
    unique() |>
    length()

  if (is.null(data$startYear))
    data$startYear <- ds$events |>
    dplyr::semi_join(department, dplyr::join_by(department_key)) |>
    dplyr::filter(event_type_key == "end") |>
    dplyr::pull(occurredAt) |>
    lubridate::year() |>
    min()

  if (is.null(data$endYear))
    data$endYear <- ds$events |>
    dplyr::semi_join(department, dplyr::join_by(department_key)) |>
    dplyr::filter(event_type_key == "end") |>
    dplyr::pull(occurredAt) |>
    lubridate::year() |>
    max()

  if (is.null(data$hospitalName))
    data$hospitalName <- ds$metadata$hospitals  |>
    dplyr::semi_join(department, dplyr::join_by(hospital_key)) |>
    dplyr::pull(displayName)

  rm(department)
  rm(ds)
}

# Make sure numbers aren't strings
data$startYear <- as.integer(data$startYear)
data$endYear <- as.integer(data$endYear)
data$nPatients <- as.integer(data$nPatients)
```

```{r}
#| label: Initialise Locale
locale <- "en_GB.UTF-8"
big_mark <- ","
```

```{r}
#| label: Set Locale
invisible(Sys.setlocale(category = "LC_ALL", locale = locale))
invisible(Sys.setLanguage(locale))
```

\selectlanguage{british}

\begin{center}

`r if (data$startYear == data$endYear) {'In'} else {'During the period'}`

\vspace*{1.25\baselineskip}

\Huge \bfseries `r if (data$startYear == data$endYear) {data$startYear} else {paste0(data$startYear, "-", data$endYear)}`\normalsize \normalfont

\vspace*{1.25\baselineskip}

the neonatology unit at

\vspace*{1.25\baselineskip}

\large \bfseries `r data$hospitalName`\normalsize \normalfont

\vspace*{1.25\baselineskip}

participated in the NeoIPC Surveillance network.

\end{center}

\vspace*{1.25\baselineskip}

By actively tracking a total of `r paste0('**', format(data$nPatients, big.mark = big_mark), '**')` newborns with a birth weight below `r format(1500L, big.mark = big_mark)` g and/or a gestational age of less than 32 weeks, the team provided valuable benchmarking data that can be used to assess and mitigate infection risks in neonatology units. We are proud and happy to have them as partners in our quest to enhance infection prevention and control in neonatology.

\vspace*{4\baselineskip}
\begin{textblock*}{10cm}(12cm,27cm)
`r data$signatory`\\
for the NeoIPC Surveillance team\\
\end{textblock*}
\begin{textblock*}{10cm}(2.5cm,27cm)
Berlin, `r format(Sys.Date(), format = "%x")`
\end{textblock*}
![](`{r} data$signatureImagePath`){fig-align="right"}
